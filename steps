    Part 5
    //homepage button
    //show original method
    //created method
    //added two arrays and mapped throug to set each to lowercase and then for each in unitLong replace with unitShort
    //replace parenthesis with space or nothing
    //create array by splitting at ' '
    //created unitIndex by finding the index in the newly split arrays. Find index where arrIngredients includes unitsShort
    //if unit index was greater than -1 unit, parseInt(arrIng[0] === true) maybe unit, === -1 no unit
    //1) create new array by slice at 0 to unitIndex, aka how many there were
    //   - if array length === 1 set count = to first index and replace - with +
     //   - else evaluate array ingredients sliced at 0, to unit index and join with + 

    //   set count = count, unit = arrIngredients[unitIndex] and ingredient to arrIngredients.slice(unitIndex + 1).join(' ')
    //2) set count = parseInt(arrIng[0]), unit '', and ingredient to arrIngredients.slice(1).join(' ')
    //3) set count = 1, unit '', ingredient to ingredient
    //set ingredients to the new ingredients


    Part 6

    //-------------------------------------------------------------

    //first created new file and function renderRecipe (displays on the ui)
    //took html elements and put them into the new function, using template literals added elements from recipe
    //then for ingredients mapped throught the array and for each ingedients added it to the ui
    //then we appended the recipe to the html file
    //imported it in the index.js file controller
    //called it when id is found, and display on UI
    //added the loader, and removed when found
    //cleared input if new id was clicked

    Part 7
    //--------------------------------------
    //Updated the numbers to be fractions
    //Use external package
    //Updated highlighted screen

    Part 8
    //--------------------------------------
    //Added the +/- buttons to work 
    //update servings, and then update ingredient numbers
    //Then added it to the UI

    Part 9
    --------------------------------------------
    //All items in shopping list will be stored here
    //Object w/ count unit and ing
    //adds item when clicked
    //deletes portion of the array
    //[2,4,6] splice(1,1) return [2,6]
    //a way to update the count when it is in the shopping list

    Part 10
    ---------------------------------------
    //select the id of the item base on its id
    //and the data attribute
    //add all the units from the item inputed
    //delete item
    //the id inputed catch it with $ selector and then remove

    Part 11 List controller
    --------------------------------------
    //create the list controller and call it down below
    //create a list if none exists
    //prepare the ui
    //add each ingredient to the list and UI
    //add items upon click
    //then renderthem with method created

    Part 12
    ---------------------------------------
    //window.state = state; see state in console
    //const id is the clost of target of the click
    //use the dataset attribute method
    //handle the delete method
    //Delete from state
    //delete from the UI
    //create new variable holding the count value
    //update the state of the list

    Part 13
    -------------------------------------------
    //takes the inputs id, title, author and img 
    //adds them to the likes array
    //takes the id finds index and removes
    //takes the id finds index and checks if it is different from -1
    //returns the number of likes
    //check if likes exist yet, create new likes object
    //variable for id
    //checks to see if liked is false
    //user hasnt liked the recipe yet
    //add like to the state
    //add the cur variables to like object state
    //toggle the like button
    //liking the recipe so set to true
    //add like to the ui list
    //delete like to the state
    //toggle the like button
    //unliking the recipe so set to false
    //delete like to the ui list
    //removes the column button when there is 0 likes
    //toggle button if it is liked or not
    //if number of likes > 0 then likes menu should be visible
    //otherwise it should be hidden
    //append the liked ingredients to the ui
    //this is done through adding elements specified in the likes class to the html markup
    //method to remove the item from the menu bar tap into the class of id then remove parent
    //limit title characters
    //adds the data to local storage!
    //gets the item back from local storage
    //Restore liked recipes everytime the page loads
    //restore the likes
    //button is displayed as such
    //render the existing likes
    //on window load add the window loaded starting elements







